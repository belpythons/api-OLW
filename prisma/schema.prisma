generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Programs {
  id            Int             @id @default(autoincrement())
  title         String         @db.VarChar(255)
  description   String         @db.Text
  createdAt     DateTime       @default(now()) @map("created_at")
  modules       Modules[]
  onlineCourses OnlineCourses[]
  certifications Certifications[]

  @@map("programs")
}

model Modules {
  id          Int       @id @default(autoincrement())
  programId   Int       @map("program_id")
  title       String    @db.VarChar(255)
  description String?   @db.Text
  orderNum    Int       @default(0) @map("order_num")
  program     Programs  @relation(fields: [programId], references: [id], onDelete: Cascade)

  @@map("modules")
}

model OnlineCourses {
  id        Int      @id @default(autoincrement())
  programId Int      @map("program_id")
  title     String   @db.VarChar(255)
  url       String   @db.VarChar(500)
  platform  String?  @db.VarChar(100)
  duration  String?  @db.VarChar(50)
  program   Programs @relation(fields: [programId], references: [id], onDelete: Cascade)

  @@map("online_courses")
}

model Certifications {
  id           Int      @id @default(autoincrement())
  programId    Int      @map("program_id")
  title        String   @db.VarChar(255)
  description  String?  @db.Text
  requirements String?  @db.Text
  program      Programs @relation(fields: [programId], references: [id], onDelete: Cascade)

  @@map("certifications")
}

model Roadmaps {
  id          Int            @id @default(autoincrement())
  careerPath  String         @map("career_path") @db.VarChar(255)
  description String?        @db.Text
  createdAt   DateTime       @default(now()) @map("created_at")
  steps       RoadmapSteps[]

  @@map("roadmaps")
}

model RoadmapSteps {
  id          Int      @id @default(autoincrement())
  roadmapId   Int      @map("roadmap_id")
  title       String   @db.VarChar(255)
  description String?  @db.Text
  orderNum    Int      @default(0) @map("order_num")
  roadmap     Roadmaps @relation(fields: [roadmapId], references: [id], onDelete: Cascade)

  @@map("roadmap_steps")
}

model Forums {
  id          Int      @id @default(autoincrement())
  category    String   @db.VarChar(255)
  description String?  @db.Text
  createdAt   DateTime @default(now()) @map("created_at")
  posts       Posts[]

  @@map("forums")
}

model Users {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(255)
  email     String    @unique @db.VarChar(255)
  createdAt DateTime  @default(now()) @map("created_at")
  posts     Posts[]
  comments  Comments[]

  @@map("users")
}

model Posts {
  id        Int       @id @default(autoincrement())
  forumId   Int       @map("forum_id")
  userId    Int       @map("user_id")
  title     String    @db.VarChar(255)
  content   String    @db.Text
  createdAt DateTime  @default(now()) @map("created_at")
  forum     Forums    @relation(fields: [forumId], references: [id], onDelete: Cascade)
  user      Users     @relation(fields: [userId], references: [id], onDelete: Cascade)
  comments  Comments[]

  @@map("posts")
}

model Comments {
  id        Int      @id @default(autoincrement())
  postId    Int      @map("post_id")
  userId    Int      @map("user_id")
  content   String   @db.Text
  createdAt DateTime @default(now()) @map("created_at")
  post      Posts    @relation(fields: [postId], references: [id], onDelete: Cascade)
  user      Users    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("comments")
}

model About {
  id      Int     @id @default(autoincrement())
  title   String  @db.VarChar(255)
  content String  @db.Text
  vision  String? @db.Text
  mission String? @db.Text

  @@map("about")
}

model Contacts {
  id    Int     @id @default(autoincrement())
  type  String  @db.VarChar(100)
  value String  @db.VarChar(255)
  icon  String? @db.VarChar(100)

  @@map("contacts")
}

model Documentaries {
  id          Int     @id @default(autoincrement())
  title       String  @db.VarChar(255)
  description String? @db.Text
  url         String  @db.VarChar(500)
  duration    String? @db.VarChar(50)
  category    String? @db.VarChar(100)

  @@map("documentaries")
}

model CommunityLinks {
  id          Int     @id @default(autoincrement())
  platform    String  @db.VarChar(100)
  url         String  @db.VarChar(500)
  description String? @db.Text
  icon        String? @db.VarChar(100)

  @@map("community_links")
}